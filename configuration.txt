git init
git commit -m "first commit"
git branch -M main
git remote add origin git@github.com:sevleo/project_name.git
git push -u origin main

1 run [npm init]
2 run [npm install webpack webpack-cli --save-dev]
3 create src, dist folders
4 create an [index.js] file in src
5 create an [index.html] file in dist
6 link the [main.js] file in a script tag. main.js is the file that will be generated by webpack.
7 in package.json delete line ["main": "index.js"], and add line ["private": true],
8 and a console.log to index.js and test by running ["npx webpack"]
9 create [webpack.config.js]
10 test by running [npx webpack --config webpack.config.js]
11 add line ["build": "webpack"] to scripts in package.json
12 test by running [npm run build]
13 run [npm install --save-dev style-loader css-loader]
14 add following below "output" in webpack.config.js:
    module: {
        rules: [
        {
            test: /\.css$/i,
            use: ['style-loader', 'css-loader'],
        },
        ],
    },
15 add styles.css to src folder
16 add [import './styles.css';] to index.js
17 test by running [npm run build] command
19 add ["line clean: true,"] to output in webpack.config.js
18 run [npm install --save-dev html-webpack-plugin]
20 add line [const HtmlWebpackPlugin = require('html-webpack-plugin');] to webpack.config.js
21 add following below "module" in webpack.config.js: 
    plugins: [
        new HtmlWebpackPlugin({
            template: './src/index.html',
            filename: 'index.html',
            inject: 'head',
            scriptLoading: 'defer',
        })
    ]
22 move index.html from dist to src folder and remove scrip load
23 run [npm run build] to test
24 add line [mode: 'development',] right before "entry" in webpack.config.js 
25 add line [devtool: 'inline-source-map',] right after "entry" in in webpack.config.js
26 add line ["watch": "webpack --watch",] in package.json scripts
    run [npm run watch] to enable watch
27 run command [npm install --save-dev webpack-dev-server]
28 add following to webpack.config.js right below "devtool"
    devServer: {
        static: './dist',
    },
29 add line ["start": "webpack serve --open",] to package.json scripts
    run [npm start] to enable server



ESLINT:
1 npm install eslint --save-dev
2 ./node_modules/.bin/eslint --init
3 Add following to settings json:
    {
    "editor.codeActionsOnSave": {
        "source.fixAll.eslint": true
    },
    "eslint.validate": ["javascript"]
    }
4 npm install --save-dev eslint-config-prettier
5 add following to the .eslintrc (at the end):
    {
    "extends": [
        "some-other-config-you-use",
        "prettier"
        ]
    }
6 run [npx eslint-config-prettier dist/main.js]



Prettier:
1 npm install --save-dev --save-exact prettier
2 node --eval "fs.writeFileSync('.prettierrc','{}\n')"
3 create .prettierignore and add following into it:
    # Ignore artifacts:
    build
    coverage
4 format all files with prettier: npx prettier . --write
